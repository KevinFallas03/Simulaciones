/*********************************************************
Evaluacion 3 - Prueba de Poker
Kevin Fallas Alvarado 2019057752
Esteban Madrigal Marin 2018154123

Chi Cuadrado prueba "91 Ejemplo n=30" con 5 decimales es de: 
Chi Cuadrado prueba "92 Ejemplo n=1000" con 5 decimales es de: 
**********************************************************/

CLEAROUTPUT

CONST 5 cantidad_decimales
GLOBAL cantidad_decimales
GLOBAL lista_fo

lista_fo = (0 0 0 0 0 0 0)
/*
NEWCMD CLASIFICAR num id
   MULTIPLES num > 1 id
   IF id = 0
      id = 7
   ELSEIF id <> 1 
      MULTIPLES num > 2 trioCount
      id = 5 + trioCount
   END
END
*/
NEWCMD CLASIFICAR hand category
   /* Códigos de las clasificaciones: 
   1 - Quintilla
   2 - Poker
   3 - Tercia
   4 - Un par
   5 - Dos pares
   6 - Full
   7 - Todos diferentes
   */
   MULTIPLES hand > 1 multipleCount /*Cuenta grupos de iguales */
   IF multipleCount = 0 /* Si no hay grupos, son todas diferentes*/
      category = 7
   ELSEIF multipleCount = 1 /*Si hay un grupo, puede ser quintilla, poker, tercia o un par */
      MULTIPLES hand > 0 category /*Cuenta cantidad de digitos unicos, la cantidad corresponde al código de clasificación*/
   ELSE /* Si hay dos grupos, puede ser Full o dos pares*/
      MULTIPLES hand > 2 trioCount /*Cuenta grupos de tres */
      category = 5 + trioCount /*Si hay un grupo de tres, es Full, sino es dos pares*/
   END
END

/*Calcular las fo*/
NEWCMD GET_FRECUENCIA_OBSERVADA lista_numeros
      CLASIFICAR lista_numeros category
      IF category = 7
         ADD (1 0) lista_fo lista_fo
      ELSEIF category = 4
         ADD (0 1 0) lista_fo lista_fo
      ELSEIF category = 5
         ADD (0 0 1 0) lista_fo lista_fo
      ELSEIF category = 3
         ADD (0 0 0 1 0) lista_fo lista_fo
      ELSEIF category = 6
         ADD (0 0 0 0 1 0) lista_fo lista_fo
      ELSEIF category = 2
         ADD (0 0 0 0 0 1 0) lista_fo lista_fo
      ELSE
         ADD (0 0 0 0 0 0 1) lista_fo lista_fo
      END
END

/*Cargar (read) un archivo de datos.*/
NEWCMD EXPLOTAR dec num lista
   decMasUno = dec + 1
   res = ()
   t = num * 10^decMasUno
   INTEGER TRUNCATE t t
   numCiclos = decMasUno
   REPEAT numCiclos
      rem = t % 10
      quo = t / 10
      INTEGER TRUNCATE quo quo
      t = quo
      CONCAT rem res res
   END
   TAKE res 1, dec lista
END

NEWCMD GET_LISTA
   READ "D:\\Documentos\\Ing en Computacion\\Semestre Vl\\Simulación\\Evaluaciones\\Simulaciones\\Prueba de Poker" lista_numeros
   print lista_numeros
   SIZE lista_numeros n
   FOREACH mazo lista_numeros
      EXPLOTAR cantidad_decimales mazo lista
      print lista
      GET_FRECUENCIA_OBSERVADA lista
   END
END

/*
NEWCMD GET_FRECUENCIA_ESPERADA
   
END
*/

/* Main */

GET_LISTA 
print lista_fo

/*Mostrar (print) la tabla de frecuencias observadas y frecuencias esperadas*/
/*
cantidad_fe_menos_uno = cantidad_fe - 1
newBin = 0, cantidad_fe_menos_uno
newFo = lista_fo_actualizada
newFe = lista_fe_actualizada
PRINT TABLE newBin%2.0F newFo newFe
PRINT


CHISQUARE  lista_fo_actualizada lista_fe_actualizada chiSquareResult
PRINT chiSquareResult
*/
